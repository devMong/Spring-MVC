<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        https://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">
        
 	<!-- <context:annotation-config /> -->
 	<!-- 
 		패키지 안에 있는 모든 클래스들을 찾아 객체화 한 후 @Component를 찾는다 
 		<context:annotation-config /> 기능도 포함하기 때문에 위와 같이 주석처리
 	-->
 	<context:component-scan base-package="com.newlecture.web.service"/>
        
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521/xe" />
		<property name="username" value="NEWLEC" />
		<property name="password" value="11111" />
	</bean>
	
	<!-- 객체화 완료 -->
	<!-- <bean id="noticeService" class="com.newlecture.web.service.jdbc.JdbcNoticeService">
		<property name="dataSource" ref="dataSource" />
	</bean> -->
</beans>